@use 'sass:math';

@mixin fluidType(
  $minFontSize: $baseMinFontSize,
  $maxFontSize: $baseMaxFontSize,
  $minWidth: $minContentWidth,
  $maxWidth: $maxContentWidth,
  $minBreakpoint: true,
  $midBreakpoint: true,
  $maxBreakpoint: true
) {
  @if $midBreakpoint {
    font-size: calc(
      #{rem($minFontSize)} +
        (#{$maxFontSize} - #{$minFontSize}) *
        ((100vw - #{$minWidth}px) / (#{$maxWidth} - #{$minWidth}))
    );
  }

  @if $minBreakpoint {
    @media (max-width: #{$minWidth}px) {
      font-size: rem($minFontSize);
    }
  }

  @if $maxBreakpoint {
    @media (min-width: #{$maxWidth}px) {
      font-size: rem($maxFontSize);
    }
  }
}

@mixin setType($fontSize--mobile, $fontSize--desktop, $minClamp: false) {
  $fontSize--mobile-small: math.div(
    ($fontSize--mobile * $siteMin),
    $siteBasis--mobile
  );
  $fontSize--mobile-large: math.div(
    ($fontSize--mobile * $siteMax--mobile),
    $siteBasis--mobile
  );
  $fontSize--desktop-large: math.div(
    ($fontSize--desktop * $siteMax--desktop),
    $siteBasis--desktop
  );
  $fontSize--desktop-small: math.div(
    ($fontSize--desktop * $siteMin--desktop),
    $siteBasis--desktop
  );
  $minMobileClamp: $fontSize--mobile-small;
  $minDesktopClamp: $fontSize--desktop-small;

  @if $minClamp {
    $minMobileClamp: $fontSize--mobile * math.div($minClamp, 100%);
    $minDesktopClamp: $fontSize--desktop * math.div($minClamp, 100%);
  }

  // If  clamp is set, then add a mq to "slow down" the scale to specified amount
  @if $minClamp {
    @media (min-width: 1px) and (max-width: #{($siteBasis--mobile - 1)}px) {
      font-size: $minMobileClamp;
    }
  }

  // Base mobile call
  @include fluidType(
    $minFontSize: $minMobileClamp,
    $maxFontSize: $fontSize--mobile-large,
    $minWidth: $siteMin,
    $maxWidth: $siteMax--mobile,
    $maxBreakpoint: false
  );

  // tablet is static
  @media (min-width: #{$siteMax--mobile}px) {
    font-size: rem($minDesktopClamp);
  }

  // If  clamp is set, then add a mq to "slow down" the scale to specified amount
  @if $minClamp {
    @media (min-width: #{$siteMin--desktop}px) and (max-width: #{$siteBasis--desktop}px) {
      @include fluidType(
        $minFontSize: $minDesktopClamp,
        $maxFontSize: $fontSize--desktop,
        $minWidth: $siteMin--desktop,
        $maxWidth: $siteBasis--desktop,
        $minBreakpoint: false,
        $maxBreakpoint: false
      );
    }
  }

  // 1280 - max
  @media (min-width: #{$siteBasis--desktop}px) {
    @include fluidType(
      $minFontSize: $fontSize--desktop-small,
      $maxFontSize: $fontSize--desktop-large,
      $minWidth: $siteMin--desktop,
      $maxWidth: $siteMax--desktop,
      $minBreakpoint: false,
      $maxBreakpoint: false
    );
  }

  // max +
  @include fluidType(
    $minFontSize: $minDesktopClamp,
    $maxFontSize: $fontSize--desktop-large,
    $minWidth: $siteMin--desktop,
    $maxWidth: $siteMax--desktop,
    $minBreakpoint: false,
    $midBreakpoint: false
  );
}

@mixin h {
  font-family: $headingFontStack;
  font-weight: $headingFont-bold;
  color: $black;
  line-height: 1.1em;
}

@mixin h1 {
  @include setType(32, 48);
}

@mixin h2 {
  @include setType(26, 40);
}

@mixin h3 {
  @include setType(22, 33);
}

@mixin h4 {
  @include setType(20, 27);
}

@mixin h5 {
  @include setType(18, 23);
}

@mixin h6 {
  @include setType(16, 20);
}

@mixin p--xxs {
  @include setType(10, 10, 100%);
}

@mixin p--xs {
  @include setType(10, 12, 100%);
}

@mixin p--sm {
  @include setType(12, 14, 100%);
}

@mixin p {
  color: $gray-200;
  line-height: 1.4;
  @include setType(14, 16, 95%);
}

@mixin p--lg {
  @include setType(16, 18, 100%);
}

@mixin p--xl {
  @include setType(18, 20, 100%);
}

@mixin p--xxl {
  @include setType(20, 22, 100%);
}
