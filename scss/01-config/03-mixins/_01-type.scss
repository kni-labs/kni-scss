@mixin fluidType(
  $minFontSize: $baseMinFontSize,
  $maxFontSize: $baseMaxFontSize,
  $minWidth: $minContentWidth,
  $maxWidth: $maxContentWidth
) {
  font-size: calc(
    #{rem($minFontSize)} + (#{$maxFontSize} - #{$minFontSize}) * ((
            100vw - #{$minWidth}px
          ) / (#{$maxWidth} - #{$minWidth}))
  );
  @media (max-width: #{$minWidth}px) {
    font-size: rem($minFontSize);
  }
  @media (min-width: #{$maxWidth}px) {
    font-size: rem($maxFontSize);
  }
}

@mixin setType($fontSize--mobile, $fontSize--desktop, $minClamp: false) {
  $fontSize--mobile-small: math.div(
    ($fontSize--mobile * $siteMin),
    $siteBasis--mobile
  );
  $fontSize--mobile-large: math.div(
    ($fontSize--mobile * $siteMax--mobile),
    $siteBasis--mobile
  );
  $fontSize--desktop-large: math.div(
    ($fontSize--desktop * $siteMax--desktop),
    $siteBasis--desktop
  );
  $fontSize--desktop-small: math.div(
    ($fontSize--desktop * $siteMin--desktop),
    $siteBasis--desktop
  );
  $minMobileClamp: $fontSize--mobile-small;
  $minDesktopClamp: $fontSize--desktop-small;

  @if $minClamp {
    $minMobileClamp: $fontSize--mobile * math.div($minClamp, 100%);
    $minDesktopClamp: $fontSize--desktop * math.div($minClamp, 100%);
  }

  @include fluidType($minMobileClamp, $fontSize--mobile-large, $ms, $tp);

  @media (min-width: #{$tp}px) {
    font-size: rem($minDesktopClamp);
  }
  @media (min-width: #{$tl}px) {
    @include fluidType($minDesktopClamp, $fontSize--desktop-large, $tl, $lf);
  }
}
