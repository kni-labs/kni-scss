@mixin fluidType(
  $minFontSize: $baseMinFontSize,
  $maxFontSize: $baseMaxFontSize,
  $minWidth: $minContentWidth,
  $maxWidth: $maxContentWidth,
  $minBreakpoint: true,
  $midBreakpoint: true,
  $maxBreakpoint: true
) {
  @if $midBreakpoint {
    font-size: calc(
      #{rem($minFontSize)} +
        (#{$maxFontSize} - #{$minFontSize}) *
        ((100vw - #{$minWidth}px) / (#{$maxWidth} - #{$minWidth}))
    );
  }

  @if $minBreakpoint {
    @media (max-width: #{$minWidth}px) {
      font-size: rem($minFontSize);
    }
  }

  @if $maxBreakpoint {
    @media (min-width: #{$maxWidth}px) {
      font-size: rem($maxFontSize);
    }
  }
}

@mixin setType($fontSize--mobile, $fontSize--desktop, $minClamp: false) {
  $fontSize--mobile-small: math.div(
    ($fontSize--mobile * $siteMin),
    $siteBasis--mobile
  );
  $fontSize--mobile-large: math.div(
    ($fontSize--mobile * $siteMax--mobile),
    $siteBasis--mobile
  );
  $fontSize--desktop-large: math.div(
    ($fontSize--desktop * $siteMax--desktop),
    $siteBasis--desktop
  );
  $fontSize--desktop-small: math.div(
    ($fontSize--desktop * $siteMin--desktop),
    $siteBasis--desktop
  );
  $minMobileClamp: $fontSize--mobile-small;
  $minDesktopClamp: $fontSize--desktop-small;

  @if $minClamp {
    $minMobileClamp: $fontSize--mobile * math.div($minClamp, 100%);
    $minDesktopClamp: $fontSize--desktop * math.div($minClamp, 100%);
  }

  @include fluidType(
    $minFontSize: $minMobileClamp,
    $maxFontSize: $fontSize--mobile-large,
    $minWidth: $ms,
    $maxWidth: $tp,
    $maxBreakpoint: false
  );

  @media (min-width: #{$tp}px) {
    font-size: rem($minDesktopClamp);
  }

  @media (min-width: #{$tl}px) {
    @include fluidType(
      $minFontSize: $minDesktopClamp,
      $maxFontSize: $fontSize--desktop-large,
      $minWidth: $tl,
      $maxWidth: $lf
    );
  }
}
